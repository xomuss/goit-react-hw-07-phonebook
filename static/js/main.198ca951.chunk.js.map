{"version":3,"sources":["Components/ContactsList/ContactList.module.css","Components/Form/Form.module.css","Components/Filter/Filter.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","Components/ContactsList/ContactsList.js","Components/Form/Form.js","Components/Filter/Filter.js","App.js","redux/phonebook/phonebook-reduser.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContscts","axios","defaults","baseURL","contact","dispatch","post","then","data","catch","error","id","delete","get","getFilter","state","contacts","filter","getLoading","loading","getVisibleContacts","createSelector","items","filterNormalize","toLowerCase","name","includes","connect","contactsData","phonebookSelectors","onDeleteContact","phonebookOperations","className","styles","contsct__list","map","number","contact__list_el","contact__list_text","onClick","Form","nameInputId","shortid","generate","telInputId","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","find","onSubmit","reset","alert","this","htmlFor","form__input","onChange","type","pattern","title","required","form__btn","Component","cont","operations","filter__input","App","fetchContacts","formSubmitHandler","isLoadingContacts","selectors","createReducer","_","payload","combineReducers","rootReduser","phonebookReduser","console","log","getDefaultMiddleware","process","store","configureStore","reducer","devTools","middleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.198ca951.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contsct__list\":\"ContactList_contsct__list__3wwf3\",\"contact__list_el\":\"ContactList_contact__list_el__1d0YJ\",\"contact__list_text\":\"ContactList_contact__list_text__3c-vJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__input\":\"Form_form__input__2zlvO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__input\":\"Filter_filter__input__2ugAo\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const filterContscts = createAction('phonebook/changeFiler');\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3004';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst addContact = contact => dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst allContacts = state => state.contacts.items;\r\n\r\n// const getVisibleContacts = state => {\r\n//   const contacts = allContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const filterNormalize = filter.toLowerCase();\r\n\r\n//   return contacts.filter(contact =>\r\n//     contact.name.toLowerCase().includes(filterNormalize),\r\n//   );\r\n// };\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [allContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const filterNormalize = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filterNormalize),\r\n    );\r\n  },\r\n);\r\n\r\nexport default {\r\n  getLoading,\r\n  getFilter,\r\n  getVisibleContacts,\r\n};\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styles from './ContactList.module.css';\nimport { phonebookOperations, phonebookSelectors } from '../../redux/phonebook';\nconst ContactsList = ({ contactsData, onDeleteContact }) => (\n  <ul className={styles.contsct__list}>\n    {contactsData.map(({ name, number, id }) => (\n      <li key={id} className={styles.contact__list_el}>\n        <p className={styles.contact__list_text}>\n          {name}: {number}\n        </p>\n        <button onClick={() => onDeleteContact(id)}>delete</button>\n      </li>\n    ))}\n  </ul>\n);\n\nconst mapStateToProps = state => ({\n  contactsData: phonebookSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(phonebookOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport operations from '../../redux/phonebook/phonebook-operations';\nimport styles from './Form.module.css';\nimport shortid from 'shortid';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n  telInputId = shortid.generate();\n\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const foundName = this.props.contacts.find(({ name }) =>\n      name.includes(this.state.name),\n    );\n    if (!foundName) {\n      this.props.onSubmit(this.state);\n      this.reset();\n      return;\n    }\n    alert('this name already exist');\n\n    // this.props.onSubmit(this.state);\n    // : alert('This name already exist');\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>\n          Name\n          <input\n            className={styles.form__input}\n            id={this.nameInputId}\n            onChange={this.handleChange}\n            value={this.state.name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label htmlFor={this.telInputId}>\n          Telephone\n          <input\n            className={styles.form__input}\n            id={this.telInputId}\n            onChange={this.handleChange}\n            value={this.state.number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={styles.form__btn} type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: cont => dispatch(operations.addContact(cont)),\n});\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from 'react';\r\nimport styles from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { phonebookSelectors, filterContscts } from '../../redux/phonebook';\r\n\r\nconst Filter = ({ onChange, value }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input\r\n      className={styles.filter__input}\r\n      onChange={onChange}\r\n      value={value}\r\n      name=\"filter\"\r\n    />\r\n  </label>\r\n);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    value: phonebookSelectors.getFilter(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => {\r\n    const value = e.target.value;\r\n    return dispatch(filterContscts(value));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport ContactsList from './Components/ContactsList';\r\nimport Form from './Components/Form';\r\nimport Filter from './Components/Filter';\r\nimport { connect } from 'react-redux';\r\nimport operations from './redux/phonebook/phonebook-operations';\r\nimport selectors from './redux/phonebook/phonebook-selectors';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    // contacts: [],\r\n    // filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Phone Book</h1>\r\n        <Form onSubmit={this.formSubmitHandler} />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        {this.props.isLoadingContacts && <h1>download...</h1>}\r\n        <ContactsList />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoadingContacts: selectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(operations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterContscts,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContscts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport phonebookReduser from './phonebook/phonebook-reduser';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\n\nconst rootReduser = combineReducers({\n  contacts: phonebookReduser,\n});\n\n// const rootReduser = combineReducers({\n//   contacts: phonebookReduser,\n// });\n\n// const store = createStore(rootReduser, composeWithDevTools());\nconsole.log(getDefaultMiddleware());\nconsole.log(process.env.NODE_ENV);\n\nconst store = configureStore({\n  reducer: rootReduser,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}